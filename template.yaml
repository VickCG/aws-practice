AWSTemplateFormatVersion: '2010-09-09'
Description: "An example template with an IAM role for a Lambda state machine."
Transform: AWS::Serverless-2016-10-31
Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
  GetStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_test/lambda_function.handler
      Runtime: python3.7
      Policies: AWSLambdaFullAccess
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
      Environment:
        Variables:
          STATUS: Test
  Test2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_test2/lambda_function.handler
      Runtime: python3.7
      Policies: AWSLambdaFullAccess
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
  MyStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      DefinitionString:
        !Sub
        - |-
          {
            "Comment": "A Hello World example using an AWS Lambda function",
            "StartAt": "HelloWorld",
            "States": {
              "GetStatus": {
                "Type": "Task",
                "Resource": "${getStatusArn}",
                "Next": "Test2"
              },
              "Test2": {
                "Type": "Task",
                "Resource": "${Test2Arn}",
                "End": true
              }
            }
          }
        - {getStatusArn: !GetAtt [ GetStatus, Arn ]}
        - {Test2Arn: !GetAtt [ Test2, Arn ]}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]